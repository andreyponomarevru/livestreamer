services:
  api-dev:
    container_name: api-dev
    image: api-dev:latest
    build:
      context: ./api
      dockerfile: ./docker/Dockerfile
      # Should match the stage name in Dockerfile
      target: development
    restart: always
    init: true
    tty: true
    ports:
      # Port for the app
      - 5000:8080
      # node process is listening for a debugging client on
      - 9230:9229
    expose:
      # Port for the app (i.e. webpack dev server port)
      - 5000
    env_file:
      - ./api/docker/.api.common.env
      - ./api/docker/.api.dev.env
      - ./postgres/docker/.postgres.common.env
      - ./postgres/docker/.postgres.dev.env
    volumes:
      # Recompile code on changes
      - ./api:/home/node
      # Set the container timezone to the time zone of host machine
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - livestreamer_backend

  postgres-dev:
    container_name: postgres-dev
    image: postgres-dev:latest
    build:
      context: ./postgres
      dockerfile: ./docker/Dockerfile
      target: development
    init: true
    restart: "no"
    env_file:
      - ./postgres/docker/.postgres.common.env
      - ./postgres/docker/.postgres.dev.env
    ports:
      - 54324:5432
    networks:
      - livestreamer_backend

  redis-dev:
    container_name: redis-dev
    image: redis-dev:latest
    build:
      context: ./redis
      dockerfile: ./docker/Dockerfile
    init: true
    ports:
      - 6380:6379
    networks:
      - livestreamer_backend

networks:
  livestreamer_backend:
    name: livestreamer_backend
    driver: bridge
