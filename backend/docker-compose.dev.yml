version: "3.7"

services:
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: ./docker/Dockerfile
    restart: always
    volumes:
      # set the same timezone and time same as on the host
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # Recompile code on changes
      - ./api/src:/api/src
      - ./api/tsconfig.json:/api/tsconfig.json
      - ./api/unit-tests:/api/unit-tests
    # Publicly exposed ports
    ports:
      # Port for the app
      - 5000:8080
      # node.js process is listening for a debugging client on
      - 9230:9229
    # Ports not exposed publicly i.e. to host machine
    # (they are only exposed to other services)
    expose:
      # Node.js application server
      - 5001
    env_file:
      - ./api/docker/.common.env
      - ./api/docker/.dev.env
      - ./postgres/docker/.common.env
      - ./postgres/docker/.dev.env
    depends_on:
      - devdb
      - redis
    networks:
      - frontend_livestreamer

  devdb:
    container_name: devdb
    build:
      context: ./postgres
      dockerfile: ./docker/Dockerfile
    restart: "no"
    env_file:
      - ./postgres/docker/.common.env
      - ./postgres/docker/.dev.env
    ports:
      - 54324:5432
    # volumes:
      # - ./postgres/init.sh:/docker-entrypoint-initdb.d/init.sh
      # Files used by init.sh script
      #- ./postgres/schema:/schema
      #- ./postgres/seeds:/seeds
    networks:
      - frontend_livestreamer

  redis:
    container_name: redis
    networks:
      - frontend_livestreamer      
      
networks:
  frontend_livestreamer:
    external: true
